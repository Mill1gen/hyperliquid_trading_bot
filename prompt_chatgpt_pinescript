**Default Strategy Parameters**
//@version=5
    strategy("RSI + stochastic Momentum with Renko", 
    initial_capital=1000, 
    default_qty_type=strategy.percent_of_equity, 
    default_qty_value=100, 
    commission_type=strategy.commission.percent, 
    commission_value=0.06, 
    overlay=true)

// ***************
// *** Inputs ***
// ***************

// RSI Settings
    rsi_length = input.int(14, "RSI Length", minval=1)
    rsi_overbought = input.int(70, "RSI Overbought Level", minval=50, maxval=100)
    rsi_oversold = input.int(30, "RSI Oversold Level", minval=0, maxval=50)

// Stochastic Settings
    stoch_k_length = input.int(14, "Stochastic %K Length")
    stoch_d_length = input.int(3, "Stochastic %D Smoothing")
    stoch_overbought = input.int(80, "Stochastic Overbought Level")
    stoch_oversold = input.int(20, "Stochastic Oversold Level")

// Renko Settings
    renko_size = input.float(1.0, "Renko Brick Size", step=0.1)
    renko_type = input.string("Traditional", "Renko Type", options=["Traditional", "ATR"])
    
// Stop Loss and Take Profit
    stop_loss_pct = input.float(1.0, "Stop Loss (%)", step=0.1)
    take_profit_pct = input.float(2.0, "Take Profit (%)", step=0.1)
    
// Enable Long/Short Positions
    use_longs = input.bool(true, "Enable Long Positions")
    use_shorts = input.bool(true, "Enable Short Positions")

// ***************
// *** Calculations ***
// ***************

// RSI Calculation
rsi = ta.rsi(close, rsi_length)

// Stochastic Oscillator Calculation
k = ta.stoch(close, high, low, stoch_k_length)
d = ta.sma(k, stoch_d_length)

// Renko Calculation
renko = request.security(ticker.renko(renko_size, renko_type), "D", close)

/ Stop Loss and Take Profit
stop_loss_long = strategy.position_avg_price * (1 - stop_loss_pct / 100)
take_profit_long = strategy.position_avg_price * (1 + take_profit_pct / 100)
stop_loss_short = strategy.position_avg_price * (1 + stop_loss_pct / 100)
take_profit_short = strategy.position_avg_price * (1 - take_profit_pct / 100)

// ***************
// *** Conditions ***
// ***************

long_condition = use_longs and 
    rsi < rsi_oversold and 
    k < stoch_oversold and 
    k > d and 
    renko > renko[1]

short_condition = use_shorts and 
    rsi > rsi_overbought and 
    k > stoch_overbought and 
    k < d and 
    renko < renko[1]

// ***************
// *** Indicator ***
// ***************
indicator("Funding Rate Monitor", overlay=false)

// Replace `fundingRate` with the actual data source for funding rates if available
fundingRate = request.security("EXCHANGE:SYMBOL", "1H", close)

// Threshold for high funding rates
highThreshold = 0.01  // Example: 0.01% funding rate
lowThreshold = -0.01  // Example: -0.01% funding rate

// Conditions
highFunding = fundingRate > highThreshold
lowFunding = fundingRate < lowThreshold

// Plot funding rate
plot(fundingRate, color=color.blue, title="Funding Rate")

// Highlight high/low funding periods
bgcolor(highFunding ? color.red : lowFunding ? color.green : na, transp=90)

// Alerts
alertcondition(highFunding, title="High Funding Rate Alert", message="Funding rate is too high!")
alertcondition(lowFunding, title="Low Funding Rate Alert", message="Funding rate is negative!")

// ***************
// *** Trading Logic ***
// ***************

if long_condition and strategy.position_size == 0
    strategy.entry("Long", strategy.long)

if short_condition and strategy.position_size == 0
    strategy.entry("Short", strategy.short)

if strategy.position_size > 0
    strategy.exit("Exit Long", from_entry="Long", stop=stop_loss_long, limit=take_profit_long)

if strategy.position_size < 0
    strategy.exit("Exit Short", from_entry="Short", stop=stop_loss_short, limit=take_profit_short)

// ***************
// *** Plots ***
// ***************

// RSI Plot
plot(rsi, title="RSI", color=color.blue, linewidth=2)
hline(rsi_overbought, "RSI Overbought", color=color.red)
hline(rsi_oversold, "RSI Oversold", color=color.green)

// Stochastic %K and %D
plot(k, title="Stochastic %K", color=color.orange, linewidth=2)
plot(d, title="Stochastic %D", color=color.purple, linewidth=2)
hline(stoch_overbought, "Stochastic Overbought", color=color.red)
hline(stoch_oversold, "Stochastic Oversold", color=color.green)

// Renko Plot
plot(renko, title="Renko Bricks", color=color.purple, linewidth=2)
